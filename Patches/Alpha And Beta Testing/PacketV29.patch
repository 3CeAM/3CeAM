Index: trunk/rewrite/conf/battle/client.conf
===================================================================
--- trunk/rewrite/conf/battle/client.conf	(revision 691)
+++ trunk/rewrite/conf/battle/client.conf	(working copy)
@@ -22,25 +22,29 @@
 // Set here which client version do you accept. Add all values of clients:
 // Clients older than accepted versions, and versions not set to 'accepted'
 // here will be rejected when logging in
-// 0x00001: Clients older than 2004-09-06aSakray (packet versions 5-9)
-// 0x00002: 2004-09-06aSakexe (version 10)
-// 0x00004: 2004-09-20aSakexe (version 11)
-// 0x00008: 2004-10-05aSakexe (version 12)
-// 0x00010: 2004-10-25aSakexe (version 13)
-// 0x00020: 2004-11-29aSakexe (version 14)
-// 0x00040: 2005-01-10bSakexe (version 15)
-// 0x00080: 2005-05-09aSakexe (version 16)
-// 0x00100: 2005-06-28aSakexe (version 17)
-// 0x00200: 2005-07-18aSakexe (version 18)
-// 0x00400: 2005-07-19bSakexe (version 19)
-// 0x00800: 2006-03-27aSakexe (version 20)
-// 0x01000: 2007-01-08aSakexe (version 21)
-// 0x02000: 2007-02-12aSakexe (version 22)
-// 0x04000: 2008-09-10aSakexe (version 23)
-// 0x08000: 2008-08-27aRagexeRE (version 24)
-// 0x10000: 2008-09-10aRagexeRE (version 25)
-// default value: 0xFFFFF (all clients)
-packet_ver_flag: 0xFFFFF
+// 0x000001: Clients older than 2004-09-06aSakray (packet versions 5-9)
+// 0x000002: 2004-09-06aSakexe (version 10)
+// 0x000004: 2004-09-20aSakexe (version 11)
+// 0x000008: 2004-10-05aSakexe (version 12)
+// 0x000010: 2004-10-25aSakexe (version 13)
+// 0x000020: 2004-11-29aSakexe (version 14)
+// 0x000040: 2005-01-10bSakexe (version 15)
+// 0x000080: 2005-05-09aSakexe (version 16)
+// 0x000100: 2005-06-28aSakexe (version 17)
+// 0x000200: 2005-07-18aSakexe (version 18)
+// 0x000400: 2005-07-19bSakexe (version 19)
+// 0x000800: 2006-03-27aSakexe (version 20)
+// 0x001000: 2007-01-08aSakexe (version 21)
+// 0x002000: 2007-02-12aSakexe (version 22)
+// 0x004000: 2008-09-10aSakexe (version 23)
+// 0x008000: 2008-08-27aRagexeRE (version 24)
+// 0x010000: 2008-09-10aRagexeRE (version 25)
+// 0x020000: 2010-11-24aRagexeRE (version 26)
+// 0x040000: Unknown Client Date (version 27)
+// 0x080000: 2011-11-22aRagexeRE (version 28)
+// 0x100000: 2012-04-10aRagexeRE (version 29)
+// default value: 0xFFFFFF (all clients)
+packet_ver_flag: 0xFFFFFF
 
 // Minimum delay between whisper/global/party/guild messages (in ms)
 // Messages that break this threshold are silently omitted. 
Index: trunk/rewrite/conf/battle/gm.conf
===================================================================
--- trunk/rewrite/conf/battle/gm.conf	(revision 691)
+++ trunk/rewrite/conf/battle/gm.conf	(working copy)
@@ -36,8 +36,10 @@
 lowest_gm_level: 1
 
 // [GM] Can use all skills? (No or mimimum GM level)
-// Warning: This feature is currently broken due to packet size overloads that are sent
-// to the client and crashing it. Best to keep this set to no until we can find a way to fix it.
+// Note: GM's with access to all skills will not beable to go back directly to the character
+// selection screen from in-game. Doing so will give a failed to connect error. They will have
+// to relog to switch characters. This is caused by the massive amount of data thats sent to
+// the character server from learning so many skills and cant be avoided.
 gm_all_skill: no
 
 // [GM] Can equip anything? (No or minimum GM level, can cause client errors.)
Index: trunk/rewrite/conf/packet_athena.conf
===================================================================
--- trunk/rewrite/conf/packet_athena.conf	(revision 691)
+++ trunk/rewrite/conf/packet_athena.conf	(working copy)
@@ -13,7 +13,7 @@
 //       have been customized, such as MAX_STORAGE, MAX_GUILD_STORAGE or MAX_CART.
 // NOTE: Do not modify this setting, unless the client has been modified to support
 //       larger packets. The client will crash, when it receives larger packets.
-socket_max_client_packet: 20480
+socket_max_client_packet: 29493
 
 //----- IP Rules Settings -----
 
Index: trunk/rewrite/db/packet_db.txt
===================================================================
--- trunk/rewrite/db/packet_db.txt	(revision 691)
+++ trunk/rewrite/db/packet_db.txt	(working copy)
@@ -1639,50 +1639,6 @@
 //0x08D4,-1
 
 packet_ver: 28
-
-//2011-11-02
-//0x083c,19,wanttoconnection,2:6:10:14:18
-//0x088a,6,getcharnamerequest,2
-//0x0817,6,ticksend,2
-//0x0366,5,changedir,2:4
-//0x0364,5,walktoxy,2
-//0x08aa,7,actionrequest,2:6
-//0x02c4,10,useskilltoid,2:4:6
-//0x0369,10,useskilltopos,2:4:6:8
-//0x08ad,90,useskilltoposinfo,2:4:6:8:10
-//0x0885,6,dropitem,2:4
-//0x0815,6,takeitem,2
-
-//2011-11-22
-//0x0835,19,wanttoconnection,2:6:10:14:18
-//0x0898,6,getcharnamerequest,2
-//0x0368,6,solvecharname,2 <-- How do I trigger the client to send a packet for this? Need to know so I can capture.
-//0x0899,6,ticksend,2
-//0x0896,5,changedir,2:4
-//0x0892,5,walktoxy,2
-//0x022d,7,actionrequest,2:6
-//0x08a1,10,useskilltoid,2:4:6
-//0x08ad,10,useskilltopos,2:4:6:8
-//0x0363,90,useskilltoposinfo,2:4:6:8:10
-//0x0436,6,dropitem,2:4
-//0x0893,6,takeitem,2
-//0x0891,26,friendslistadd,2
-//0x089e,5,hommenu,4
-//0x0895,26,partyinvite2,2
-//0x0281,36,storagepassword,0 <-- Lacking Password Support To Check
-//0x0202,18,bookingregreq,2:4:6
-//0x0369,-1,itemlistwindowselected,2:4:8
-//0x0887,-1,reqopenbuyingstore,2:4:8:9:89
-//0x08a9,2,reqclosebuyingstore,0
-//0x088c,6,reqclickbuyingstore,2
-//0x089d,-1,reqtradebuyingstore,2:4:8:12
-//0x0439,8,useitem,2:4 <-- Isnt needed since packet didnt change.
-//0x08ab,-1,searchstoreinfo,2:4:5:9:13:14:15 <-- Unable to get to work, along with the 2 below packets. Function not working?
-//0x088b,2,searchstoreinfonextpage,0
-//0x08a2,12,searchstoreinfolistitemclick,2:6:10
-//0x08a4,8,movetokafra,2:4
-//0x0362,8,movefromkafra,2:4
-
 //2011-11-22aRagexeRE
 0x0835,19,wanttoconnection,2:6:10:14:18
 0x0898,6,getcharnamerequest,2
@@ -1725,3 +1681,66 @@
 0x080a,18
 0x080b,6
 0x0908,5
+
+//2012-04-10aRagexeRE
+packet_ver: 29
+0x01FD,15,repairitem,2
+0x089C,26,friendslistadd,2
+0x0885,5,hommenu,4
+0x0961,36,storagepassword,0
+0x0288,-1,cashshopbuy,4:8
+0x091C,26,partyinvite2,2
+0x094B,19,wanttoconnection,2:6:10:14:18
+0x0369,7,actionrequest,2:6
+0x083C,10,useskilltoid,2:4:6
+0x0439,8,useitem,2:4
+0x0945,-1,itemlistwindowselected,2:4:8
+0x0815,-1,reqopenbuyingstore,2:4:8:9:89
+0x0817,2,reqclosebuyingstore,0
+0x0360,6,reqclickbuyingstore,2
+0x0811,-1,reqtradebuyingstore,2:4:8:12
+0x0819,-1,searchstoreinfo,2:4:5:9:13:14:15
+0x0835,2,searchstoreinfonextpage,0
+0x0838,12,searchstoreinfolistitemclick,2:6:10
+0x0437,5,walktoxy,2
+0x0886,6,ticksend,2
+0x0871,5,changedir,2:4
+0x0938,6,takeitem,2
+0x0891,6,dropitem,2:4
+0x086C,8,movetokafra,2:4
+0x08A6,8,movefromkafra,2:4
+0x0438,10,useskilltopos,2:4:6:8
+0x0366,90,useskilltoposinfo,2:4:6:8:10
+0x0889,6,getcharnamerequest,2
+0x0884,6,solvecharname,2
+0x08E5,41,bookingregreq,2:4	//Added to prevent disconnections
+0x08E6,4
+0x08E7,10,bookingsearchreq,2
+0x08E8,-1
+0x08E9,2,bookingdelreq,2
+0x08EA,4
+0x08EB,39,bookingupdatereq,2
+0x08EC,73
+0x08ED,43
+0x08EE,6
+0x08EF,6,bookingignorereq,2
+0x08F0,6
+0x08F1,6,bookingjoinpartyreq,2
+0x08F2,36
+0x08F3,-1
+0x08F4,6
+0x08F5,-1,bookingsummonmember,2:4
+0x08F6,22
+0x08F7,3
+0x08F8,7
+0x08F9,6
+0x08FA,6
+0x08FB,6,bookingcanceljoinparty,2
+0x0907,5,moveitem,2:4
+0x0908,5
+0x08D7,28,battlegroundreg,2:4 //Added to prevent disconnections
+0x08CF,10 //Amulet spirits
+0x0977,14 //Monster HP Bar
+
+//Add new packets here.
+//packet_ver: 30
Index: trunk/rewrite/src/char/char.c
===================================================================
--- trunk/rewrite/src/char/char.c	(revision 691)
+++ trunk/rewrite/src/char/char.c	(working copy)
@@ -1265,8 +1265,12 @@
 //-----------------------------------
 // Function to create a new character
 //-----------------------------------
-int make_new_char(struct char_session_data* sd, char* name_, int str, int agi, int vit, int int_, int dex, int luk, int slot, int hair_color, int hair_style)
-{
+#if PACKETVER >= 20120307
+int make_new_char(struct char_session_data* sd, char* name_, int slot, int hair_color, int hair_style) {
+	int str = 1, agi = 1, vit = 1, int_ = 1, dex = 1, luk = 1;
+#else
+int make_new_char(struct char_session_data* sd, char* name_, int str, int agi, int vit, int int_, int dex, int luk, int slot, int hair_color, int hair_style) {
+#endif
 	char name[NAME_LENGTH];
 	int i, flag;
 	
@@ -1278,10 +1282,14 @@
 		return flag;
 
 	//check other inputs
+#if PACKETVER >= 20120307
+	if(slot >= MAX_CHARS) 
+#else
 	if((slot >= MAX_CHARS) // slots
 	|| (str + agi + vit + int_ + dex + luk != 6*5 ) // stats
 	|| (str < 1 || str > 9 || agi < 1 || agi > 9 || vit < 1 || vit > 9 || int_ < 1 || int_ > 9 || dex < 1 || dex > 9 || luk < 1 || luk > 9) // individual stat values
 	|| (str + int_ != 10 || agi + luk != 10 || vit + dex != 10) ) // pairs
+#endif
 		return -2; // invalid input
 
 	// check the number of already existing chars in this account
@@ -1334,7 +1342,11 @@
 	char_dat[i].status.max_sp = 11 * (100 + char_dat[i].status.int_) / 100;
 	char_dat[i].status.hp = char_dat[i].status.max_hp;
 	char_dat[i].status.sp = char_dat[i].status.max_sp;
+#if PACKETVER >= 20120307
+	char_dat[i].status.status_point = 48;
+#else
 	char_dat[i].status.status_point = 0;
+#endif
 	char_dat[i].status.skill_point = 0;
 	char_dat[i].status.option = 0;
 	char_dat[i].status.karma = 0;
@@ -3748,16 +3760,25 @@
 		}
 		break;
 
-		// create new char
+#if PACKETVER >= 20120307
+		// S 0970 <name>.24B <slot>.B <hair color>.W <hair style>.W
+		case 0x970:
+			FIFOSD_CHECK(31);
+#else
 		// S 0067 <name>.24B <str>.B <agi>.B <vit>.B <int>.B <dex>.B <luk>.B <slot>.B <hair color>.W <hair style>.W
 		case 0x67:
 			FIFOSD_CHECK(37);
+#endif
 
 			if( !char_new ) //turn character creation on/off [Kevin]
 				i = -2;
 			else
+
+#if PACKETVER >= 20120307
+				i = make_new_char(sd, (char*)RFIFOP(fd,2),RFIFOB(fd,26),RFIFOW(fd,27),RFIFOW(fd,29));
+#else
 				i = make_new_char(sd, (char*)RFIFOP(fd,2),RFIFOB(fd,26),RFIFOB(fd,27),RFIFOB(fd,28),RFIFOB(fd,29),RFIFOB(fd,30),RFIFOB(fd,31),RFIFOB(fd,32),RFIFOW(fd,33),RFIFOW(fd,35));
-
+#endif
 			//'Charname already exists' (-1), 'Char creation denied' (-2) and 'You are underaged' (-3)
 			if (i < 0)
 			{
@@ -3785,8 +3806,11 @@
 				if( ch < MAX_CHARS )
 					sd->found_char[ch] = i; // position of the new char in the char_dat[] array
 			}
-
+#if PACKETVER >= 20120307
+			RFIFOSKIP(fd,31);
+#else
 			RFIFOSKIP(fd,37);
+#endif
 		break;
 
 		// delete char
Index: trunk/rewrite/src/char_sql/char.c
===================================================================
--- trunk/rewrite/src/char_sql/char.c	(revision 691)
+++ trunk/rewrite/src/char_sql/char.c	(working copy)
@@ -1289,8 +1289,12 @@
 //-----------------------------------
 // Function to create a new character
 //-----------------------------------
-int make_new_char_sql(struct char_session_data* sd, char* name_, int str, int agi, int vit, int int_, int dex, int luk, int slot, int hair_color, int hair_style)
-{
+#if PACKETVER >= 20120307
+int make_new_char_sql(struct char_session_data* sd, char* name_, int slot, int hair_color, int hair_style) {
+	int str = 1, agi = 1, vit = 1, int_ = 1, dex = 1, luk = 1;
+#else
+int make_new_char_sql(struct char_session_data* sd, char* name_, int str, int agi, int vit, int int_, int dex, int luk, int slot, int hair_color, int hair_style) {
+#endif
 	char name[NAME_LENGTH];
 	char esc_name[NAME_LENGTH*2+1];
 	int char_id, flag;
@@ -1304,10 +1308,14 @@
 		return flag;
 
 	//check other inputs
+#if PACKETVER >= 20120307
+	if(slot >= MAX_CHARS) 
+#else
 	if((slot >= MAX_CHARS) // slots
 	|| (str + agi + vit + int_ + dex + luk != 6*5 ) // stats
 	|| (str < 1 || str > 9 || agi < 1 || agi > 9 || vit < 1 || vit > 9 || int_ < 1 || int_ > 9 || dex < 1 || dex > 9 || luk < 1 || luk > 9) // individual stat values
 	|| (str + int_ != 10 || agi + luk != 10 || vit + dex != 10) ) // pairs
+#endif
 		return -2; // invalid input
 
 	// check the number of already existing chars in this account
@@ -1332,13 +1340,23 @@
 			Sql_ShowDebug(sql_handle);
 	}
 
+#if PACKETVER >= 20120307
 	//Insert the new char entry to the database
+	if( SQL_ERROR == Sql_Query(sql_handle, "INSERT INTO `%s` (`account_id`, `char_num`, `name`, `zeny`, `status_point`,`str`, `agi`, `vit`, `int`, `dex`, `luk`, `max_hp`, `hp`,"
+		"`max_sp`, `sp`, `hair`, `hair_color`, `last_map`, `last_x`, `last_y`, `save_map`, `save_x`, `save_y`) VALUES ("
+		"'%d', '%d', '%s', '%d',  '%d','%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d','%d', '%d','%d', '%d', '%s', '%d', '%d', '%s', '%d', '%d')",
+		char_db, sd->account_id , slot, esc_name, start_zeny, 48, str, agi, vit, int_, dex, luk,
+		(40 * (100 + vit)/100) , (40 * (100 + vit)/100 ),  (11 * (100 + int_)/100), (11 * (100 + int_)/100), hair_style, hair_color,
+		mapindex_id2name(start_point.map), start_point.x, start_point.y, mapindex_id2name(start_point.map), start_point.x, start_point.y) )
+#else
+	//Insert the new char entry to the database
 	if( SQL_ERROR == Sql_Query(sql_handle, "INSERT INTO `%s` (`account_id`, `char_num`, `name`, `zeny`, `str`, `agi`, `vit`, `int`, `dex`, `luk`, `max_hp`, `hp`,"
 		"`max_sp`, `sp`, `hair`, `hair_color`, `last_map`, `last_x`, `last_y`, `save_map`, `save_x`, `save_y`) VALUES ("
 		"'%d', '%d', '%s', '%d',  '%d', '%d', '%d', '%d', '%d', '%d', '%d', '%d','%d', '%d','%d', '%d', '%s', '%d', '%d', '%s', '%d', '%d')",
 		char_db, sd->account_id , slot, esc_name, start_zeny, str, agi, vit, int_, dex, luk,
 		(40 * (100 + vit)/100) , (40 * (100 + vit)/100 ),  (11 * (100 + int_)/100), (11 * (100 + int_)/100), hair_style, hair_color,
 		mapindex_id2name(start_point.map), start_point.x, start_point.y, mapindex_id2name(start_point.map), start_point.x, start_point.y) )
+#endif
 	{
 		Sql_ShowDebug(sql_handle);
 		return -2; //No, stop the procedure!
@@ -3545,14 +3563,23 @@
 		break;
 
 		// create new char
+#if PACKETVER >= 20120307
+		// S 0970 <name>.24B <slot>.B <hair color>.W <hair style>.W
+		case 0x970:
+			FIFOSD_CHECK(31);
+#else
 		// S 0067 <name>.24B <str>.B <agi>.B <vit>.B <int>.B <dex>.B <luk>.B <slot>.B <hair color>.W <hair style>.W
 		case 0x67:
 			FIFOSD_CHECK(37);
-
+#endif
 			if( !char_new ) //turn character creation on/off [Kevin]
 				i = -2;
 			else
+#if PACKETVER >= 20120307
+				i = make_new_char_sql(sd, (char*)RFIFOP(fd,2),RFIFOB(fd,26),RFIFOW(fd,27),RFIFOW(fd,29));
+#else
 				i = make_new_char_sql(sd, (char*)RFIFOP(fd,2),RFIFOB(fd,26),RFIFOB(fd,27),RFIFOB(fd,28),RFIFOB(fd,29),RFIFOB(fd,30),RFIFOB(fd,31),RFIFOB(fd,32),RFIFOW(fd,33),RFIFOW(fd,35));
+#endif
 
 			//'Charname already exists' (-1), 'Char creation denied' (-2) and 'You are underaged' (-3)
 			if (i < 0)
@@ -3585,7 +3612,11 @@
 					sd->found_char[ch] = i; // the char_id of the new char
 			}
 
+#if PACKETVER >= 20120307
+			RFIFOSKIP(fd,31);
+#else
 			RFIFOSKIP(fd,37);
+#endif
 		break;
 
 		// delete char
Index: trunk/rewrite/src/common/mmo.h
===================================================================
--- trunk/rewrite/src/common/mmo.h	(revision 691)
+++ trunk/rewrite/src/common/mmo.h	(working copy)
@@ -44,10 +44,11 @@
 // 20100721 - 2010-07-21aRagexeRE+ - 0x6b, 0x6d
 // 20100727 - 2010-07-27aRagexeRE+ - 0x6b, 0x6d
 // 20100803 - 2010-08-03aRagexeRE+ - 0x6b, 0x6d, 0x827, 0x828, 0x829, 0x82a, 0x82b, 0x82c, 0x842, 0x843
+// 20120307 - 2012-03-07aRagexeRE+ - 0x970
 
 #ifndef PACKETVER
 	//#define PACKETVER	20081126
-	#define PACKETVER 20111122
+	#define PACKETVER 20120410
 #endif
 // backward compatible PACKETVER 8 and 9
 #if PACKETVER == 8
Index: trunk/rewrite/src/common/socket.c
===================================================================
--- trunk/rewrite/src/common/socket.c	(revision 691)
+++ trunk/rewrite/src/common/socket.c	(working copy)
@@ -201,7 +201,8 @@
 
 // Maximum packet size in bytes, which the client is able to handle.
 // Larger packets cause a buffer overflow and stack corruption.
-static size_t socket_max_client_packet = 20480;
+//static size_t socket_max_client_packet = 20480;
+static size_t socket_max_client_packet = 29493;
 
 // initial recv buffer size (this will also be the max. size)
 // biggest known packet: S 0153 <len>.w <emblem data>.?B -> 24x24 256 color .bmp (0153 + len.w + 1618/1654/1756 bytes)
Index: trunk/rewrite/src/map/clif.c
===================================================================
--- trunk/rewrite/src/map/clif.c	(revision 691)
+++ trunk/rewrite/src/map/clif.c	(working copy)
@@ -1237,8 +1237,8 @@
 				clif_status_change(&sd->bl,SI_MANHOLE,1,9999,sd->sc.data[SC__MANHOLE]->val1,0,0);
 			if( sd->sc.count && sd->sc.data[SC_ALL_RIDING] )
 				clif_status_change(&sd->bl,SI_ALL_RIDING,1,9999,sd->sc.data[SC_ALL_RIDING]->val1,0,0);
-			//if( sd->sc.count && sd->sc.data[SC_ON_PUSH_CART] )
-			//	clif_status_change(&sd->bl,SI_ON_PUSH_CART,1,9999,sd->sc.data[SC_ON_PUSH_CART]->val1,0,0);
+			if( sd->sc.count && sd->sc.data[SC_ON_PUSH_CART] )
+				clif_status_change(&sd->bl,SI_ON_PUSH_CART,1,9999,sd->sc.data[SC_ON_PUSH_CART]->val1,0,0);
 		}
 		break;
 	case BL_MOB:
@@ -4022,8 +4022,8 @@
 				clif_status_change_single(&sd->bl,&tsd->bl,SI_MANHOLE,1,9999,tsd->sc.data[SC__MANHOLE]->val1,0,0);
 			if( tsd->sc.count && tsd->sc.data[SC_ALL_RIDING] )
 				clif_status_change_single(&sd->bl,&tsd->bl,SI_ALL_RIDING,1,9999,tsd->sc.data[SC_ALL_RIDING]->val1,0,0);
-			//if( tsd->sc.count && tsd->sc.data[SC_ON_PUSH_CART] )
-			//	clif_status_change_single(&sd->bl,&tsd->bl,SI_ON_PUSH_CART,1,9999,tsd->sc.data[SC_ON_PUSH_CART]->val1,0,0);
+			if( tsd->sc.count && tsd->sc.data[SC_ON_PUSH_CART] )
+				clif_status_change_single(&sd->bl,&tsd->bl,SI_ON_PUSH_CART,1,9999,tsd->sc.data[SC_ON_PUSH_CART]->val1,0,0);
 		}
 		break;
 	case BL_MER: // Devotion Effects
@@ -4048,6 +4048,14 @@
 				clif_specialeffect_single(bl,423,sd->fd);
 			else if(md->special_state.size==1)
 				clif_specialeffect_single(bl,421,sd->fd);
+#if PACKETVER >= 20120404
+			if( !(md->status.mode&MD_BOSS) ){
+				int i;
+				for(i = 0; i < DAMAGELOG_SIZE; i++)// must show hp bar to all char who already hit the mob.
+					if( md->dmglog[i].id == sd->status.char_id )
+						clif_monster_hp_bar(md, sd->fd);
+			}
+#endif
 		}
 		break;
 	case BL_PET:
@@ -10334,8 +10342,14 @@
  *------------------------------------------*/
 void clif_parse_RemoveOption(int fd,struct map_session_data *sd)
 {
+#if ( PACKETVER >= 20120201 )
+	pc_setoption(sd,sd->sc.option&~(OPTION_RIDING|OPTION_FALCON|OPTION_RIDING_DRAGON|OPTION_MADO));
+	if( sd->sc.data[SC_ON_PUSH_CART] )
+		pc_setcart(sd,0);
+#else
 	//Can only remove Cart/Riding Peco/Falcon/Riding Dragon/Mado.
-	pc_setoption(sd,sd->sc.option&~(OPTION_CART|OPTION_RIDING|OPTION_FALCON|(OPTION_RIDING_DRAGON)|OPTION_MADO));
+	pc_setoption(sd,sd->sc.option&~(OPTION_CART|OPTION_RIDING|OPTION_FALCON|OPTION_RIDING_DRAGON|OPTION_MADO));
+#endif
 }
 
 /*==========================================
@@ -10350,11 +10364,23 @@
 
 	type = (int)RFIFOW(fd,2);
 
+#if ( PACKETVER >= 20120201 )
+	if( (type == 9 && sd->status.base_level > 131) ||
+	(type == 8 && sd->status.base_level > 121) ||
+	(type == 7 && sd->status.base_level > 111) ||
+	(type == 6 && sd->status.base_level > 101) ||
+	(type == 5 && sd->status.base_level >  90) ||
+	(type == 4 && sd->status.base_level >  80) ||
+	(type == 3 && sd->status.base_level >  65) ||
+	(type == 2 && sd->status.base_level >  40) ||
+	(type == 1))
+#else
 	if( (type == 5 && sd->status.base_level > 90) ||
 	    (type == 4 && sd->status.base_level > 80) ||
 	    (type == 3 && sd->status.base_level > 65) ||
 	    (type == 2 && sd->status.base_level > 40) ||
 	    (type == 1))
+#endif
 		pc_setcart(sd,type);
 }
 
@@ -15317,6 +15343,19 @@
 	WFIFOSET(fd,packet_len(0x83d));
 }
 
+void clif_monster_hp_bar( struct mob_data* md, int fd )
+{
+#if PACKETVER >= 20120404	
+	WFIFOHEAD(fd,packet_len(0x977));
+	
+	WFIFOW(fd,0)  = 0x977;
+	WFIFOL(fd,2)  = md->bl.id;
+	WFIFOL(fd,6)  = md->status.hp;
+	WFIFOL(fd,10) = md->status.max_hp;
+	
+	WFIFOSET(fd,packet_len(0x977));
+#endif
+}
 
 /// Parse function for packet debugging
 void clif_parse_debug(int fd,struct map_session_data *sd)
@@ -15602,22 +15641,26 @@
 #else // 0x22c changed
 	   10, -1, -1,  8, 10,  2,282, 18, 18, 15, 58, 57, 65,  5, 71,  5,
 #endif
-	   12, 26,  9, 11, -1, -1, 10,  2,282, 11,  4, 36, -1, -1,  4,  2,
+	   12, 26,  9, 11, -1, -1, 10,  2,282, 11,  4, 36,  6, -1,  4,  2,
 	//#0x0240
 	   -1, -1, -1, -1, -1,  3,  4,  8, -1,  3, 70,  4,  8, 12,  4, 10,
-	    3, 32, -1,  3,  3,  5,  5,  8,  2,  3, -1,  6,  4, -1,  4,  0,
+	    3, 32, -1,  3,  3,  5,  5,  8,  2,  3, -1,  6,  4,  6,  4,  6,
 	    6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	    0,  0,  0,  0,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	//#0x0280
-	    0,  0,  0,  6,  0,  0,  0,  0,  0, 12, 18,  0,  0,  0,  0,  0,
-	    0,  4,  0, 70,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
-	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+#if PACKETVER < 20070711
+	    0,  0,  0,  6, 14,  0,  0, -1,  6,  8, 18,  0,  0,  0,  0,  0,
+#else
+	    0,  0,  0,  6, 14,  0,  0, -1, 10, 12, 18,  0,  0,  0,  0,  0, // 0x288, 0x289 increase by 4 (kafra points)
+#endif
+	    0,  4,  0, 70, 10,  0,  0,  0,  8,  6, 27, 80,  0, -1,  0,  0,
+	    0,  0,  8,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	   85, -1, -1,107,  6, -1,  7,  7, 22,191,  0,  8,  0,  0,  0,  0,
 	//#0x02C0
-	    0,  0,  0,  0,  0, 30,  6,  0,  0,  3,  0, 65,  4, 71, 10,  0,
-	   -1, -1,  0,  0, 29,  0,  6, -1, 10, 10,  3,  0, -1, 32,  6,  0,
-	    0, 33,  0,  0,  0,  0,  0,  0, -1,  0, -1,  0, 67, 59, 60,  8,
-	   10,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0,
+	    0, -1,  0,  0,  0, 30, 30,  0,  0,  3,  0, 65,  4, 71, 10,  0,
+	   -1, -1, -1,  0, 29,  0,  6, -1, 10, 10,  3,  0, -1, 32,  6, 36,
+	   34, 33,  0,  0,  0,  0,  0,  0, -1, -1, -1, 13, 67, 59, 60,  8,
+	   10,  2,  2,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	//#0x0300
 	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
@@ -15656,8 +15699,8 @@
 	//#0x04C0
 	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
-	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  8,  0,  0,
 	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	//#0x0500
 	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
@@ -15724,18 +15767,38 @@
 	    0,  0,  0,  0,  0,  0, 14, -1, -1, -1,  8, 25,  0,  0, 26,  0,
 	//#0x0800
 #if PACKETVER < 20091229
- 	   -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 14, 20,
+	   -1, -1,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 14, 20,
 #else // for Party booking ( PACKETVER >= 20091229 )
 	   -1, -1, 18,  4,  8,  6,  2,  4, 14, 50, 18,  6,  2,  3, 14, 20,
 #endif
-	    3, -1,  8, -1,  86, 2,  6,  6, -1, -1,  4, 10, 10, 22,  8,  0,
+	    3, -1,  8, -1,  86, 2,  6,  6, -1, -1,  4, 10, 10,  0,  0,  0,
 	    0,  0,  0,  0,  6,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
 	    0,  0,  0,  0,  0, -1, -1,  3,  2, 66,  5,  2, 12,  6,  0,  0,
- 	//#0x0840
-		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
-		0,  0,  0,  0,  0,  0, -1, -1, -1,  0,  0,  0,  0,  0,  0,  0,
-		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
-		0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	//#0x0840
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0, -1, -1, -1, -1,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	//#0x0880
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	//#0x08C0
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0, 10,
+	    0,  0, 10,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	//#0x0900
+	    0,  0,  0,  0,  0,  0,  0,  0,  5,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	//#0x0940
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,  0,
+	    0,  0,  0,  0,  0,  0,  0, 14,  0,  0,  0,  0,  0,  0,  0,  0,
 	};
 	struct {
 		void (*func)(int, struct map_session_data *);
@@ -15939,6 +16002,7 @@
 		{clif_parse_SearchStoreInfoNextPage,"searchstoreinfonextpage"},
 		{clif_parse_CloseSearchStoreInfo,"closesearchstoreinfo"},
 		{clif_parse_SearchStoreInfoListItemClick,"searchstoreinfolistitemclick"},
+		//{ clif_parse_MoveItem , "moveitem" },
 		{NULL,NULL}
 	};
 
@@ -16058,6 +16122,13 @@
 			if(p2) *p2++=0;
 			k = atoi(str2[j]);
 			// if (packet_db[packet_ver][cmd].pos[j] != k && clif_config.prefer_packet_db)	// not used for now
+
+			if( j >= MAX_PACKET_POS )
+			{
+				ShowError("Too many positions found for packet 0x%04x (max=%d).\n", cmd, MAX_PACKET_POS);
+				break;
+			}
+
 			packet_db[packet_ver][cmd].pos[j] = k;
 		}
 	}
Index: trunk/rewrite/src/map/clif.h
===================================================================
--- trunk/rewrite/src/map/clif.h	(revision 691)
+++ trunk/rewrite/src/map/clif.h	(working copy)
@@ -28,13 +28,14 @@
 struct party_booking_ad_info;
 #include <stdarg.h>
 // packet DB
-#define MAX_PACKET_DB		0x910
-#define MAX_PACKET_VER		28
+#define MAX_PACKET_DB		0x980
+#define MAX_PACKET_VER		29
+#define	MAX_PACKET_POS		20
 
 struct s_packet_db {
 	short len;
 	void (*func)(int, struct map_session_data *);
-	short pos[20];
+	short pos[MAX_PACKET_POS];
 };
 
 // packet_db[SERVER] is reserved for server use
@@ -178,6 +179,7 @@
 	CLR_DEAD,
 	CLR_RESPAWN,
 	CLR_TELEPORT,
+	CLR_TRICKDEAD,
 } clr_type;
 
 enum map_property
@@ -655,4 +657,6 @@
 void clif_elemental_info(struct map_session_data *sd);
 void clif_elemental_updatestatus(struct map_session_data *sd, int type);
 
+void clif_monster_hp_bar( struct mob_data* md, int fd );
+
 #endif /* _CLIF_H_ */
Index: trunk/rewrite/src/map/mob.c
===================================================================
--- trunk/rewrite/src/map/mob.c	(revision 691)
+++ trunk/rewrite/src/map/mob.c	(working copy)
@@ -1964,6 +1964,17 @@
 	
 	if (!src)
 		return;
+
+#if PACKETVER >= 20120404
+	if( !(md->status.mode&MD_BOSS) ){
+		int i;
+		for(i = 0; i < DAMAGELOG_SIZE; i++){ // must show hp bar to all char who already hit the mob.
+			struct map_session_data *sd = map_charid2sd(md->dmglog[i].id);
+			if( sd && check_distance_bl(&md->bl, &sd->bl, AREA_SIZE) ) // check if in range
+				clif_monster_hp_bar(md, sd->fd);
+		}
+	}
+#endif
 	
 	if(md->special_state.ai==2/* && md->master_id == src->id*/)
 	{	//LOne WOlf explained that ANYONE can trigger the marine countdown skill. [Skotlex]
Index: trunk/rewrite/src/map/pc.c
===================================================================
--- trunk/rewrite/src/map/pc.c	(revision 691)
+++ trunk/rewrite/src/map/pc.c	(working copy)
@@ -662,7 +662,11 @@
 
   	//Only copy the Cart/Peco/Falcon/Dragon/Warg/Mado options, the rest are handled via
 	//status change load/saving. [Skotlex]
+#if ( PACKETVER >= 20120201 )
+	sd->status.option = sd->sc.option&(OPTION_FALCON|OPTION_RIDING|OPTION_RIDING_DRAGON|OPTION_WUG|OPTION_RIDING_WUG|OPTION_MADO);
+#else
 	sd->status.option = sd->sc.option&(OPTION_CART|OPTION_FALCON|OPTION_RIDING|OPTION_RIDING_DRAGON|OPTION_WUG|OPTION_RIDING_WUG|OPTION_MADO);
+#endif
 		
 	if (sd->sc.data[SC_JAILED])
 	{	//When Jailed, do not move last point.
@@ -6084,8 +6088,13 @@
 		i = sd->sc.option;
 		if( i&OPTION_RIDING && pc_checkskill(sd, KN_RIDING) )
 			i &= ~OPTION_RIDING;
+#if ( PACKETVER >= 20120201 )
+		if( sd->sc.data[SC_ON_PUSH_CART] )
+			pc_setcart(sd, 0);
+#else
 		if( i&OPTION_CART && pc_checkskill(sd, MC_PUSHCART) )
 			i &= ~OPTION_CART;
+#endif
 		if( i&OPTION_FALCON && pc_checkskill(sd, HT_FALCON) )
 			i &= ~OPTION_FALCON;
 		if( i&(OPTION_RIDING_DRAGON) && pc_checkskill(sd, RK_DRAGONTRAINING) )
@@ -7042,8 +7051,13 @@
 	i = sd->sc.option;
 	if(i&OPTION_RIDING && !pc_checkskill(sd, KN_RIDING))
 		i&=~OPTION_RIDING;
+#if ( PACKETVER >= 20120201 )
+	if( sd->sc.data[SC_ON_PUSH_CART] && !pc_checkskill(sd, MC_PUSHCART) )
+		pc_setcart(sd, 0);
+#else
 	if(i&OPTION_CART && !pc_checkskill(sd, MC_PUSHCART))
 		i&=~OPTION_CART;
+#endif
 	if(i&OPTION_FALCON && !pc_checkskill(sd, HT_FALCON))
 		i&=~OPTION_FALCON;
 	if(i&(OPTION_RIDING_DRAGON) && !pc_checkskill(sd, RK_DRAGONTRAINING))
@@ -7189,6 +7203,7 @@
 		}
 	}
 
+#if ( PACKETVER < 20120201 )
 	if( type&OPTION_CART && !(p_type&OPTION_CART) )
   	{ // Cart On
 		clif_cartlist(sd);
@@ -7202,6 +7217,7 @@
 		if( pc_checkskill(sd, MC_PUSHCART) < 10 )
 			status_calc_pc(sd,0); //Remove speed penalty.
 	}
+#endif
 
 	if( type&OPTION_FALCON && !(p_type&OPTION_FALCON) )
 		clif_status_load(&sd->bl,SI_FALCON,1);  // Falcon ON
@@ -7294,22 +7310,49 @@
  *------------------------------------------*/
 int pc_setcart(struct map_session_data *sd,int type)
 {
+	int maxcarts = 9;
+#if ( PACKETVER < 20120201 )
 	int cart[6] = {0x0000,OPTION_CART1,OPTION_CART2,OPTION_CART3,OPTION_CART4,OPTION_CART5};
 	int option;
+	maxcarts = 5;
+#endif
 
 	nullpo_ret(sd);
 
-	if( type < 0 || type > 5 )
+	if( type < 0 || type > maxcarts )
 		return 1;// Never trust the values sent by the client! [Skotlex]
 
 	if( pc_checkskill(sd,MC_PUSHCART) <= 0 )
 		return 1;// Push cart is required
 
+#if ( PACKETVER >= 20120201 )
+	switch( type ) {
+		case 0:
+			if( !sd->sc.data[SC_ON_PUSH_CART] )
+				return 0;
+			status_change_end(&sd->bl,SC_ON_PUSH_CART,INVALID_TIMER);
+			clif_clearcart(sd->fd);
+			break;
+		default:// Everything else is an allowed ID so we can move on
+			if( !sd->sc.data[SC_ON_PUSH_CART] )// First time, so fill cart data
+				clif_cartlist(sd);
+			clif_updatestatus(sd, SP_CARTINFO);
+			sc_start(&sd->bl, SC_ON_PUSH_CART, 100, type, 0);
+			//clif_status_load_notick(&sd->bl, SI_ON_PUSH_CART,   2 , type, 0, 0);
+			//clif_status_change_single(&sd->bl, SI_ON_PUSH_CART, 2, 9999, type, 0, 0);
+			clif_status_change(&sd->bl, SI_ON_PUSH_CART, 2, 9999, type, 0, 0);
+			break;
+	}
+	
+	if(pc_checkskill(sd, MC_PUSHCART) < 10)
+		status_calc_pc(sd,0);//Recalc speed penalty.
+#else
 	// Update option
 	option = sd->sc.option;
 	option &= ~OPTION_CART;// clear cart bits
 	option |= cart[type]; // set cart
 	pc_setoption(sd, option);
+#endif
 
 	return 0;
 }
Index: trunk/rewrite/src/map/pc.h
===================================================================
--- trunk/rewrite/src/map/pc.h	(revision 691)
+++ trunk/rewrite/src/map/pc.h	(working copy)
@@ -566,7 +566,14 @@
 #define pc_ishiding(sd)       ( (sd)->sc.option&(OPTION_HIDE|OPTION_CLOAK|OPTION_CHASEWALK) )
 #define pc_iscloaking(sd)     ( !((sd)->sc.option&OPTION_CHASEWALK) && ((sd)->sc.option&OPTION_CLOAK) )
 #define pc_ischasewalk(sd)    ( (sd)->sc.option&OPTION_CHASEWALK )
+
+// Newer clients use a status to make carts appear while older ones use a OPTION.
+#if ( PACKETVER >= 20120201 )
+#define pc_iscarton(sd)       ( (sd)->sc.data[SC_ON_PUSH_CART] )
+#else
 #define pc_iscarton(sd)       ( (sd)->sc.option&OPTION_CART )
+#endif
+
 #define pc_isfalcon(sd)       ( (sd)->sc.option&OPTION_FALCON )
 #define pc_iswarg(sd)         ( (sd)->sc.option&OPTION_WUG )
 #define pc_isinvisible(sd)    ( (sd)->sc.option&OPTION_INVISIBLE )
Index: trunk/rewrite/src/map/script.c
===================================================================
--- trunk/rewrite/src/map/script.c	(revision 691)
+++ trunk/rewrite/src/map/script.c	(working copy)
@@ -7412,7 +7412,11 @@
 		flag = script_getnum(st,3);
 	else if( !option ){// Request to remove everything.
 		flag = 0;
-		option = OPTION_CART|OPTION_FALCON|OPTION_RIDING|(OPTION_RIDING_DRAGON)|OPTION_WUG|OPTION_RIDING_WUG|OPTION_MADO;
+#if ( PACKETVER >= 20120201 )
+		option = OPTION_FALCON|OPTION_RIDING|OPTION_RIDING_DRAGON|OPTION_WUG|OPTION_RIDING_WUG|OPTION_MADO;
+#else
+		option = OPTION_CART|OPTION_FALCON|OPTION_RIDING|OPTION_RIDING_DRAGON|OPTION_WUG|OPTION_RIDING_WUG|OPTION_MADO;
+#endif
 	}
 	if( flag ){// Add option
 		if( option&OPTION_WEDDING && !battle_config.wedding_modifydisplay )
