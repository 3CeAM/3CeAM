Index: battle.c
===================================================================
--- battle.c	(revision 517)
+++ battle.c	(working copy)
@@ -2041,27 +2041,20 @@
 					break;
 				case RK_SONICWAVE: // Sugested formula from irowiki. 
 					skillratio += 400 + 100 * skill_lv; // Base skillratio.
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case RK_HUNDREDSPEAR: // Sugested formula from irowiki.
 					skillratio += 500 + (40 * skill_lv); // Base skillratio.
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case RK_WINDCUTTER: // Sugested formula from irowiki.
 					skillratio += 50 * skill_lv; // Base skillratio
-					if( s_level > 50 ) skillratio += skillratio * (1 + (s_level-50) / 20); // Bonus by base level.
 					break;
 				case RK_IGNITIONBREAK: // Sugested formula from irowiki.
 					i = distance_bl(src,target) / 2;
 					skillratio += 100 * skill_lv;
 					if( i < 4 ) skillratio += 100 * skill_lv;
 					if( i < 2 ) skillratio += 100;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					if( sstatus->rhw.ele == ELE_FIRE )	skillratio +=  skillratio / 2;	// Bonus by fire element endow.
 					break;
-				case RK_DRAGONBREATH: // Sugested formula from irowiki.
-					skillratio *= skill_lv * s_level / 100;
-					break;
 				case RK_CRUSHSTRIKE:	// Sugested formula from irowiki.
 					skillratio += 550;
 					if( sd )
@@ -2079,7 +2072,6 @@
 					break;
 				case RK_PHANTOMTHRUST: // TODO: How much Spear Mastery affects?.
 					skillratio += 20 * (skill_lv - 1);
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					if( sd ) skillratio += pc_checkskill(sd, KN_SPEARMASTERY) * 10; // Temporary value.
 					break;
 				case GC_CROSSIMPACT:
@@ -2089,7 +2081,7 @@
 					skillratio += 200;
 					break;
 				case GC_COUNTERSLASH:
-					skillratio += 200 + (100 * skill_lv) + sstatus->agi + s_level / 10;
+					skillratio += 200 + (100 * skill_lv) + sstatus->agi;
 					break;
 				case GC_ROLLINGCUTTER:
 					skillratio += 20 * skill_lv;
@@ -2122,20 +2114,16 @@
 					break;
 				case NC_BOOSTKNUCKLE:
 					skillratio += 100 + 100 * skill_lv + sstatus->dex;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case NC_PILEBUNKER:
 					skillratio += 200 + 100 * skill_lv + sstatus->str;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case NC_VULCANARM:
 					skillratio += 70 * skill_lv - 100 + sstatus->dex;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case NC_FLAMELAUNCHER:
 				case NC_COLDSLOWER:
 					skillratio += 200 + 300 * skill_lv;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case NC_ARMSCANNON:
 					switch( tstatus->size )
@@ -2144,19 +2132,15 @@
 						case 1: skillratio += 100 + 400 * skill_lv; break;//medium
 						case 2: skillratio += 100 + 300 * skill_lv; break;//large
 					}
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case NC_AXEBOOMERANG:
 					skillratio += 60 + 40 * skill_lv;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case NC_POWERSWING:
 					skillratio += 80 + 20 * skill_lv + sstatus->str + sstatus->dex;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case NC_AXETORNADO:
 					skillratio += 100 + 100 * skill_lv + sstatus->vit;
-					if( s_level > 100 ) skillratio += skillratio * (s_level - 100) / 200;	// Base level bonus.
 					break;
 				case SC_FATALMENACE:
 					skillratio += 100 * skill_lv;
@@ -2168,24 +2152,24 @@
 					skillratio += 100 + 100 * skill_lv;
 					break;
 				case LG_CANNONSPEAR:// Stimated formula. Still need confirm it.
-					skillratio += -100 + (50  + sstatus->str) * skill_lv * s_level / 100;
+					skillratio += -100 + (50  + sstatus->str) * skill_lv;
 					break;
 				case LG_BANISHINGPOINT:
-					skillratio += -100 + ((50 * skill_lv) + (30 * ((sd)?pc_checkskill(sd,SM_BASH):1))) * s_level / 100;
+					skillratio += -100 + ((50 * skill_lv) + (30 * ((sd)?pc_checkskill(sd,SM_BASH):1)));
 					break;
 				case LG_SHIELDPRESS:
-					skillratio += 60 + 43 * skill_lv * s_level / 100;
+					skillratio += 60 + 43 * skill_lv;
 					if( sc && sc->data[SC_GLOOMYDAY_SK] )
 						skillratio += 80 + (5 * sc->data[SC_GLOOMYDAY_SK]->val1);
 					break;
 				case LG_PINPOINTATTACK:
-					skillratio = ((100 * skill_lv) + (10 * status_get_agi(src)) ) * s_level / 100;
+					skillratio = ((100 * skill_lv) + (10 * status_get_agi(src)) );
 					break;
 				case LG_RAGEBURST:
 					if( sd && sd->rageball_old )
-						skillratio += -100 + (sd->rageball_old * 200 * s_level / 100);
+						skillratio += -100 + (sd->rageball_old * 200);
 					else
-						skillratio += -100 + 15 * 200 * s_level / 100;
+						skillratio += -100 + 15 * 200;
 					break;
 				case LG_SHIELDSPELL:
 					if( wflag&1 )
@@ -2204,19 +2188,19 @@
 						skillratio += (sd) ? sd->shieldmdef * 20 : 1000;
 					break;
 				case LG_MOONSLASHER:
-					skillratio += -100 + (120 * skill_lv + ((sd) ? pc_checkskill(sd,LG_OVERBRAND) : 5) * 80) * s_level / 100;
+					skillratio += -100 + (120 * skill_lv + ((sd) ? pc_checkskill(sd,LG_OVERBRAND) : 5) * 80);
 					break;
 				case LG_OVERBRAND:
-					skillratio += ((2567 * skill_lv / 10) + ((sd) ? pc_checkskill(sd,CR_SPEARQUICKEN): 1)) * s_level / 100;
+					skillratio += ((2567 * skill_lv / 10) + ((sd) ? pc_checkskill(sd,CR_SPEARQUICKEN): 1));
 					break;
 				case LG_OVERBRAND_BRANDISH:
-					skillratio += -100 + ((200 * skill_lv) +  (2 * (status_get_str(src) + status_get_dex(src)) / 3)) * s_level / 100;
+					skillratio += -100 + ((200 * skill_lv) +  (2 * (status_get_str(src) + status_get_dex(src)) / 3));
 					break;
 				case LG_OVERBRAND_PLUSATK:
-					skillratio = 160 * skill_lv * s_level / 100;
+					skillratio = 160 * skill_lv;
 					break;
 				case LG_EARTHDRIVE:
-					skillratio = (skillratio + 100) * skill_lv * s_level / 100;
+					skillratio = (skillratio + 100) * skill_lv;
 					break;
 				case SR_DRAGONCOMBO:
 					skillratio += 40 * skill_lv;
@@ -2308,7 +2292,6 @@
 					break;
 				case GN_CART_TORNADO:
 					skillratio += 50 * skill_lv + (sd) ? pc_checkskill(sd, GN_REMODELING_CART) * 50 : 250;
-					skillratio += skillratio * s_level / 100;
 					if( sc && sc->data[SC_GN_CARTBOOST] )
 						skillratio += 10 * sc->data[SC_GN_CARTBOOST]->val1;
 					break;
@@ -3308,10 +3291,10 @@
 						skillratio += 100 +100*skill_lv +100*(skill_lv/2);
 						break;
 					case AB_JUDEX:
-						skillratio = (skillratio + (skill_lv == 5) ? 300 : 180 + 20 * skill_lv) * s_level / 100;
+						skillratio = (skillratio + (skill_lv == 5) ? 300 : 180 + 20 * skill_lv);
 						break;
 					case AB_ADORAMUS:
-						skillratio = (skillratio + 100 + 100 * skill_lv) * s_level / 100;
+						skillratio = (skillratio + 100 + 100 * skill_lv);
 						break;
 					case AB_DUPLELIGHT_MAGIC:
 						skillratio += 100 + 20 * skill_lv;
@@ -3319,37 +3302,36 @@
 					case WL_SOULEXPANSION:
 						{
 							struct status_change *tsc = status_get_sc(target);
-							skillratio = (skillratio + 300 + 100 * skill_lv + status_get_int(src)) * s_level / 100;
+							skillratio = (skillratio + 300 + 100 * skill_lv + status_get_int(src));
 							if( tsc && tsc->data[SC_WHITEIMPRISON] )
 								skillratio <<= 1;
 						}
 						break;
 					case WL_FROSTMISTY:
-						skillratio = (skillratio + 100 + 100 * skill_lv) * s_level / 100;
+						skillratio = (skillratio + 100 + 100 * skill_lv);
 						break;
 					case WL_JACKFROST:
 						{
 							struct status_change *tsc = status_get_sc(target);
 							if( tsc && tsc->data[SC_FREEZING] )
 							{
-								skillratio = (skillratio + 900 + 300 * skill_lv) * s_level / 100;
+								skillratio = (skillratio + 900 + 300 * skill_lv);
 							}
 							else
-								skillratio = (skillratio + 100 * skill_lv) * (1 + ((sd) ? sd->status.job_level : 0) / 100);
+								skillratio = (skillratio + 100 * skill_lv);
 						}
 						break;
 					case WL_DRAINLIFE:
-						skillratio = (skillratio + 400 + 100 * skill_lv * (1 + sstatus->int_/1000)) * s_level / 100;
+						skillratio = (skillratio + 400 + 100 * skill_lv * (1 + sstatus->int_/1000));
 						break;
 					case WL_CRIMSONROCK:
-						skillratio = skillratio + 1200 + 300 * skill_lv + 15 * (s_level - 100);
+						skillratio = skillratio + 1200 + 300 * skill_lv + 15;
 						break;
 					case WL_HELLINFERNO:
 						if( s_ele == ELE_FIRE )
 							skillratio += 60 * skill_lv - 100;
 						else
 							skillratio += 240 * skill_lv - 100;
-						skillratio += skillratio * s_level / 100;
 						break;
 					case WL_COMET:
 						if( sc )
@@ -3368,10 +3350,10 @@
 							skillratio += 2400 + 500 * skill_lv; // Monsters maybe...
 						break;
 					case WL_CHAINLIGHTNING_ATK:
-						skillratio = (skillratio + 100 + 300 * skill_lv) * s_level / 100;
+						skillratio = (skillratio + 100 + 300 * skill_lv);
 						break;
 					case WL_EARTHSTRAIN:
-						skillratio = (skillratio + 1900 + 100 * skill_lv) * s_level/100;
+						skillratio = (skillratio + 1900 + 100 * skill_lv);
 						break;
 					case WL_TETRAVORTEX_FIRE:
 					case WL_TETRAVORTEX_WATER:
@@ -3384,7 +3366,6 @@
 					case WL_SUMMON_ATK_WIND:
 					case WL_SUMMON_ATK_GROUND:
 						skillratio += 50 * skill_lv - 50;
-						skillratio = skillratio * (s_level + 2 * (sd ? sd->status.job_level : 0)) / 100;
 						break;
 					case WM_SEVERE_RAINSTORM:
 						skillratio += 50 * skill_lv;
@@ -3393,22 +3374,22 @@
 						skillratio += 100 * (sd ? pc_checkskill(sd, WM_REVERBERATION) : 1);
 						break;
 					case SO_FIREWALK:
-						skillratio += -100 + 300 * ( s_level * 3 / 100 );
+						skillratio += -100 + 300;
 						if( sc && sc->data[SC_HEATER_OPTION] )
 							skillratio += skillratio * sc->data[SC_HEATER_OPTION]->val3 / 100;
 						break;
 					case SO_ELECTRICWALK:
-						skillratio += -100 + 300 * ( s_level * 3 / 100 );
+						skillratio += -100 + 300;
 						if( sc && sc->data[SC_BLAST_OPTION] )
 							skillratio += skillratio * sc->data[SC_BLAST_OPTION]->val2 / 100;
 						break;
 					case SO_EARTHGRAVE:
-						skillratio += -100 + 200 * (sd ? pc_checkskill(sd, SA_SEISMICWEAPON) : 1 + sstatus->int_ * skill_lv) * s_level / 100;
+						skillratio += -100 + 200 * (sd ? pc_checkskill(sd, SA_SEISMICWEAPON) : 1 + sstatus->int_ * skill_lv);
 						if( sc && sc->data[SC_BLAST_OPTION] )
 							skillratio += skillratio * sc->data[SC_BLAST_OPTION]->val2 / 100;
 						break;
 					case SO_DIAMONDDUST:
-						skillratio += -100 + 200 * (sd ? pc_checkskill(sd, SA_FROSTWEAPON) : 1 + sstatus->int_ * skill_lv) * s_level / 100;
+						skillratio += -100 + 200 * (sd ? pc_checkskill(sd, SA_FROSTWEAPON) : 1 + sstatus->int_ * skill_lv);
 						if( sc && sc->data[SC_COOLER_OPTION] )
 							skillratio += skillratio * sc->data[SC_COOLER_OPTION]->val3 / 100;
 						break;
@@ -3418,7 +3399,7 @@
 							skillratio += skillratio * sc->data[SC_CURSED_SOIL_OPTION]->val2 / 100;
 						break;
 					case SO_PSYCHIC_WAVE:
-						skillratio += -100 + skill_lv * 70 + ( sstatus->int_ * 3 * s_level / 100 );
+						skillratio += -100 + skill_lv * 70 + ( sstatus->int_ * 3 );
 						if( sc )
 						{
 							if( sc->data[SC_HEATER_OPTION] )
@@ -3432,12 +3413,12 @@
 						}
 						break;
 					case SO_VARETYR_SPEAR: //Assumed Formula.
-						skillratio += -100 + (sstatus->int_ * skill_lv * s_level / 100);
+						skillratio += -100 + (sstatus->int_ * skill_lv );
 					if( sc && sc->data[SC_BLAST_OPTION] )
 						skillratio += skillratio * sc->data[SC_BLAST_OPTION]->val2 / 100;
 						break;
 					case SO_CLOUD_KILL:
-						skillratio += -100 + skill_lv * 40 * s_level / 100;
+						skillratio += -100 + skill_lv * 40;
 						if( sc && sc->data[SC_CURSED_SOIL_OPTION] )
 							skillratio += skillratio * sc->data[SC_CURSED_SOIL_OPTION]->val2 / 100;
 						break;
